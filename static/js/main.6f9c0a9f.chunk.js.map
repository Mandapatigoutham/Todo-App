{"version":3,"sources":["TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoList","_ref","todolist","deleteHandler","_jsx","children","map","todo","index","_jsxs","onClick","App","task","setTask","useState","todos","setTodos","className","onSubmit","e","preventDefault","newTodos","size","type","name","value","onChange","target","indexValue","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"sJAaeA,MAXEC,IAA+B,IAA9B,SAACC,EAAQ,cAACC,GAAcF,EACtC,OACIG,cAAA,OAAAC,SACKH,EAASI,KAAI,CAACC,EAAKC,IACpBJ,cAAA,OAAAC,SACII,eAAA,MAAAJ,SAAA,CAAKE,EAAK,SAAQH,cAAA,UAAQM,QAASA,IAAMP,EAAcK,GAAOH,SAAC,eADzDG,QCgCPG,MAnCHA,KACV,MAAOC,EAAKC,GAAWC,mBAAS,KACzBC,EAAMC,GAAYF,mBAAS,IAelC,OACEV,cAAA,OAAAC,SACED,cAAA,UAAAC,SACED,cAAA,OAAKa,UAAU,OAAMZ,SACnBI,eAAA,OAAKQ,UAAU,YAAWZ,SAAA,CACxBD,cAAA,MAAIa,UAAU,aAAYZ,SAAC,iCAC3BI,eAAA,QAAMS,SAhBMC,IACpBA,EAAEC,iBACF,MAAMC,EAAW,IAAIN,EAAMH,GAC3BI,EAASK,GACTR,EAAQ,KAY8BR,SAAA,CAC5BD,cAAA,SAAOkB,KAAK,KAAKC,KAAK,OAAOC,KAAK,OAAOC,MAAOb,EAAMc,SApB5CP,IACpBN,EAAQM,EAAEQ,OAAOF,UAmB0E,YACjFrB,cAAA,SAAOmB,KAAK,SAASE,MAAM,MAAMD,KAAK,WAExCpB,cAACJ,EAAQ,CAACE,SAAUa,EAAOZ,cAddyB,IACrB,MAAMP,EAAWN,EAAMc,QAAO,CAACtB,EAAKC,IAAUA,IAAUoB,IACxDZ,EAASK,gBCNES,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAKhC,IAAkD,IAAjD,OAAEiC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASrC,EACpEiC,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACPpC,cAACqC,IAAMC,WAAU,CAAArC,SACfD,cAACO,EAAG,MAENgC,SAASC,eAAe,SAM1Bd,K","file":"static/js/main.6f9c0a9f.chunk.js","sourcesContent":["import React from 'react'\n\nconst TodoList = ({todolist,deleteHandler}) => {\n    return (\n        <div>\n            {todolist.map((todo,index) =>\n            <div key={index}>\n                <h5>{todo} &nbsp; <button onClick={() => deleteHandler(index)}>Delete</button></h5>\n            </div>)}\n        </div>\n    )\n}\n\nexport default TodoList\n","import React,{useState} from 'react'\nimport TodoList from './TodoList';\n\nconst App = () => {\n  const [task,setTask] = useState(\"\");\n  const [todos,setTodos] = useState([]);\n\n  const changeHandler = e =>{\n    setTask(e.target.value)\n  }\n  const submitHandler = e =>{\n    e.preventDefault();\n    const newTodos = [...todos,task];\n    setTodos(newTodos);\n    setTask(\"\");\n  }\n  const deleteHandler = (indexValue) =>{\n    const newTodos = todos.filter((todo,index) => index !== indexValue);\n    setTodos(newTodos);\n  }\n  return (\n    <div>\n      <center>\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">Todo Management  Application</h5>\n            <form onSubmit={submitHandler}>\n              <input size=\"30\" type=\"text\" name=\"task\" value={task} onChange={changeHandler} /> &nbsp;&nbsp;\n              <input type=\"submit\" value=\"Add\" name=\"Add\"/>\n            </form>\n            <TodoList todolist={todos} deleteHandler={deleteHandler}/>\n          </div>\n        </div>\n      </center>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}